import asyncio

from aiogram.filters import Command

from aiogram import Dispatcher, Bot, F
from aiogram.types import Message

from config import BOT_TOKEN
from core.assistant_api import check_user_registered, register_user, generate_assistant_response, reset_context
from core.logger import logger

dispatcher = Dispatcher()


@dispatcher.message(Command("start"))
async def command_start_handler(message: Message) -> None:
    user_id = message.from_user.id
    user_exists = await check_user_registered(user_id)
    if not user_exists:
        await register_user(
            user_id=user_id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
    await message.answer(
        "ü§ñ –≠—Ç–æ—Ç –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º –î–æ–Ω–µ—Ü–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\n"
        "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –æ—Ç–≤–µ—Ç—ã –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏. –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, "
        "–æ—Å–æ–±–µ–Ω–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–µ–π, —É—á–µ–±–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏ –∞–∫—Ç–∞–º–∏."
    )


@dispatcher.message(Command("clear"))
async def command_start_handler(message: Message) -> None:
    user_id = message.from_user.id
    await reset_context(
        user_id=user_id
    )
    await message.answer(
        "–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!"
    )


@dispatcher.message(F.text)
async def handle_any_text(message: Message):
    response = generate_assistant_response(message)
    await message.answer(response.get("answer"))


@dispatcher.message(F.sticker)
async def handle_sticker(message: Message):
    await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –∑–Ω–∞—á–µ–Ω–∏–π –≤—Å–µ—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤ :[ –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –æ–±—â–∞—Ç—å—Å—è —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(F.photo)
async def handle_photo(message: Message):
    await message.answer(
        "üì∏ –ù–∞–≤–µ—Ä–Ω–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞...–Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –µ–µ. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(F.video)
async def handle_video(message: Message):
    await message.answer("üé¨ –í–∏–¥–µ–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ..., –Ω–æ —è –≤—Å–µ –µ—â–µ —Ä–∞–∑–±–∏—Ä–∞—é—Å—å —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—Å—Ç–µ.")


@dispatcher.message(F.voice)
async def handle_voice(message: Message):
    await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–∞—Å—à–∏—Ä—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Ç—Ä–∞—Ç–æ–π –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö "
                         "—Ä–µ—Å—É—Ä—Å–æ–≤...–¥–∞–≤–∞–π—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Ç–µ–∫—Å—Ç–æ–º")


@dispatcher.message(F.video_note)
async def handle_video_note(message: Message):
    await message.answer("üé• –ö—Ä—É–∂–æ—á–µ–∫ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —è –µ–≥–æ –ø–æ–π–º—É. "
                         "–ù–æ —Å–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(F.audio)
async def handle_audio(message: Message):
    await message.answer("üéß –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∑–∞–ø–∏—Å—å, –Ω–æ –¥–∞–≤–∞–π—Ç–µ –ø–æ–æ–±—â–∞–µ–º—Å—è —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(F.document)
async def handle_document(message: Message):
    await message.answer(
        "–ü–æ–∫–∞ —á—Ç–æ —è —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–º. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —á–µ–º-–Ω–∏–±—É–¥—å!"
    )


@dispatcher.message(F.animation)
async def handle_animation(message: Message):
    await message.answer("üéûÔ∏è –ì–∏—Ñ–∫—É –ø–æ—Å–º–æ—Ç—Ä–µ–ª, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏–º –æ–±—â–∞—Ç—å—Å—è —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(F.contact)
async def handle_contact(message: Message):
    await message.answer("üìá –ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –Ω–æ —è –ø–æ–∫–∞ —á—Ç–æ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç!")


@dispatcher.message(F.location)
async def handle_location(message: Message):
    await message.answer("üìç –û–¥–Ω–∞–∂–¥—ã –º—ã –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤ —ç—Ç–æ–π —Ç–æ—á–∫–µ! –ù–æ —Å–µ–π—á–∞—Å –¥–∞–≤–∞–π—Ç–µ –ø–æ–æ–±—â–∞–µ–º—Å—è —Ç–µ–∫—Å—Ç–æ–º!")


@dispatcher.message(~F.text)
async def handle_unknown(message: Message):
    await message.answer(
        "ü§∑ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ —É–º–µ—é –ø–æ–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–ª–æ–≤–∞–º–∏, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!"
    )


async def main() -> None:
    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot = Bot(token=BOT_TOKEN)
    await dispatcher.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
